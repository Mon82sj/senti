{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","text","setText","useState","result","setResult","error","setError","activePage","setActivePage","user","analyzeSentiment","async","response","fetch","method","headers","Content-Type","body","JSON","stringify","data","json","ok","err","React","createElement","Fragment","className","src","onClick","renderContent","color","value","onChange","e","target","placeholder","style","sentiment","emoji","intensity","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LA2KeA,MAxKf,WACE,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAAQC,GAAaF,mBAAS,OAC9BG,EAAOC,GAAYJ,mBAAS,KAC5BK,EAAYC,GAAiBN,mBAAS,QACvCO,EAAgB,0EAAhBA,EACG,2EAGHC,EAAmBC,UACvB,IACE,MAAMC,QAAiBC,MAAM,gCAAiC,CAC5DC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEnB,WAEnBoB,QAAaR,EAASS,OACxBT,EAASU,IACXlB,EAAUgB,GACVd,EAAS,MAETF,EAAU,MACVE,EAASc,EAAKf,OAAS,8BAEzB,MAAOkB,GACPjB,EAAS,+BAoGb,OACIkB,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAA,cAEAD,IAAAC,cAAA,OAAKE,UAAU,YACfH,IAAAC,cAAA,OAAKG,IAAKnB,EAAWkB,UAAU,SAC/BH,IAAAC,cAAA,KAAGE,UAAU,OAAM,OACfH,IAAAC,cAAA,UAAQE,UAAU,WAAWE,QAASA,IAAIrB,EAAc,SAAS,QACjEgB,IAAAC,cAAA,UAAQE,UAAU,WAAWE,QAASA,IAAIrB,EAAc,eAAe,qBACvEgB,IAAAC,cAAA,UAAQE,UAAU,WAAWE,QAASA,IAAIrB,EAAc,UAAU,SAClEgB,IAAAC,cAAA,UAAQE,UAAU,WAAWE,QAASA,IAAIrB,EAAc,YAAY,YAExEgB,IAAAC,cAAA,WACAD,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAA,OAAKE,UAAU,WACfH,IAAAC,cAAA,UAAI,oCAAiCD,IAAAC,cAAA,WAAK,kCAA+BD,IAAAC,cAAA,WAAK,uBAC1DD,IAAAC,cAAA,WAAK,8CAEzBD,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAID,IAAAC,cAAA,OAAKE,UAAU,WAAWC,IAAKnB,KACnCe,IAAAC,cAAA,UACED,IAAAC,cAAA,cACAD,IAAAC,cAAA,OAAKE,UAAU,OACbH,IAAAC,cAAA,MAAIE,UAAU,aAAa,OAC3BH,IAAAC,cAAA,OAAKE,UAAU,WAxHLG,MACpB,OAAQvB,GACN,IAAK,OACH,OAAOiB,IAAAC,cAAA,WACLD,IAAAC,cAAA,OAAKG,IAAKnB,IAAYe,IAAAC,cAAA,WACtBD,IAAAC,cAAA,MAAIE,UAAU,cAAa,iDAC3BH,IAAAC,cAAA,UAAQE,UAAU,eAAeE,QAASA,IAAIrB,EAAc,eAAe,qBAE/E,IAAK,aACH,OACEgB,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIE,UAAU,aAAY,sBAC1BH,IAAAC,cAAA,YACEM,MAAM,gBACNC,MAAOhC,EACPiC,SAAWC,GAAMjC,EAAQiC,EAAEC,OAAOH,OAClCI,YAAY,uBACZZ,IAAAC,cAAA,WAAMD,IAAAC,cAAA,WAAMD,IAAAC,cAAA,WACdD,IAAAC,cAAA,UAAQE,UAAU,SAASE,QAASnB,GAAkB,WACrDL,GAASmB,IAAAC,cAAA,KAAGY,MAAO,CAAEN,MAAO,QAAU1B,GACtCF,GACCqB,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGE,UAAU,QAAO,cAAcH,IAAAC,cAAA,SAAG,IAAEtB,EAAOmC,UAAU,IAAEnC,EAAOoC,OACjEf,IAAAC,cAAA,KAAGE,UAAU,QAAO,WAAWH,IAAAC,cAAA,SAAG,IAAEP,KAAKC,UAAUhB,EAAOqC,cAKpE,IAAK,UACH,OACEhB,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIE,UAAU,aAAY,cAC1BH,IAAAC,cAAA,KAAGE,UAAU,uBAAsB,6FACnCH,IAAAC,cAAA,WACAD,IAAAC,cAAA,WAGN,IAAK,QACH,OACED,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIE,UAAU,aAAY,YAAaH,IAAAC,cAAA,WACvCD,IAAAC,cAAA,KAAGE,UAAU,qBAAoB,oiBAY7CH,IAAAC,cAAA,SAAG,gBAAgB,yLAMnBD,IAAAC,cAAA,SAAG,eAAe,sJAKlBD,IAAAC,cAAA,SAAG,kBAEHD,IAAAC,cAAA,SAAG,uBAAuB,sDAG1BD,IAAAC,cAAA,SAAG,4BAA4B,oEAG/BD,IAAAC,cAAA,SAAG,wBAAwB,0ZAgBrB,QACE,OAAO,OAkCAK,GAAgB,aClJhBW,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAV,EAAA,GAAAW,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjC,IAAAC,cAACD,IAAMkC,WAAU,KACflC,IAAAC,cAAC1B,EAAG,QAOR0C","file":"static/js/main.c1bdea75.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const [activePage, setActivePage] = useState('home'); // Track active page\n  const user={image_url:'https://i.pinimg.com/474x/cb/1e/6b/cb1e6b78315ec3c7506063e7c3513c50.jpg',\n    logo : 'https://img.icons8.com/?size=100&id=MWUdGkQ1pfjQ&format=png&color=F25081'\n  };\n\n  const analyzeSentiment = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/analyze', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResult(data);\n        setError('');\n      } else {\n        setResult(null);\n        setError(data.error || 'Error analyzing sentiment');\n      }\n    } catch (err) {\n      setError('Error analyzing sentiment');\n    }\n  };\n\n  // Function to render the active page content\n  const renderContent = () => {\n    switch (activePage) {\n      case 'home':\n        return(<div>\n          <img src={user.logo}/><br/>\n          <h1 className=\"pheading-1\">Welcome to Emo , The Sentiment Analysis Model</h1>\n          <button className='Front-button' onClick={()=>setActivePage('front-page')}>Click to Start!!</button>\n        </div>);\n      case 'front-page':\n        return (\n          <div>\n            <h2 className=\"heading-2\">Sentiment Analysis</h2>\n            <textarea\n              color='rgb(255,0,98)'\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              placeholder=\"Enter text here...\"\n            /><br /><br /><br />\n            <button className=\"button\" onClick={analyzeSentiment}>Analyze</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            {result && (\n              <div>\n                <p className=\"left\">Sentiment:</p><p> {result.sentiment} {result.emoji}</p>\n                <p className=\"left\">Scores:</p><p> {JSON.stringify(result.intensity)}</p>\n              </div>\n            )}\n          </div>\n        );  \n      case 'contact':\n        return (\n          <div>\n            <h2 className=\"heading-2\">Contact Us</h2>\n            <p className='contact-description'>If you have any questions, feel free to reach out to us at support@sentimentanalysis.com.</p>\n            <br/>\n            <p></p>\n          </div>\n        );\n      case 'about':\n        return (\n          <div >\n            <h2 className=\"heading-2\">About Us</h2><br />\n            <p className='about-description'>\nWelcome to Emo, your go-to platform for advanced sentiment analysis.\nWe are passionate about helping individuals and businesses understand \nthe emotional tone of their text data, enabling better decision-making \n                and deeper insights.\n\nAt Emo, we believe that every piece of text carries a sentiment, \nwhether itâ€™s a simple social media post, a customer review, or a \ndetailed report. Our state-of-the-art sentiment analysis tools\n utilize cutting-edge natural language processing techniques \n to evaluate and interpret the emotions behind the words.\n\n<b>Our Mission:</b>\nTo empower our users with the tools and insights needed \nto decode emotions and sentiments in textual data, \nfostering more meaningful connections and smarter \n      communication strategies.\n\n<b>Our Vision:</b>\nTo become a leader in sentiment analysis technology,\nproviding accurate, reliable, and user-friendly \nsolutions for a diverse range of applications.\n\n<b>What We Offer:</b>\n\n<b>Real-Time Analysis:</b> \nGet instant feedback on the sentiment of your text.\n\n<b>User-Friendly Interface:</b> \nOur platform is designed with simplicity and ease \nof use in mind.\n<b>Advanced Technology:</b> \nWe leverage powerful AI models to deliver precise\nsentiment scores.\n\nWhether you're a marketer looking to understand \ncustomer feedback, a researcher analyzing social \ntrends, or just someone curious about the sentiment \nof your text, Emo is here to provide you with the \ntools and insights you need to succeed.\n\nThank you for choosing Emo. \nWe look forward to helping you uncover the emotions behind your words!\n\n</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  \n\n  return (\n      <>\n      <center>\n\n      <div className='menu-bar'>\n      <img src={user.logo} className='Logo'/>\n      <p className=\"nav\">EMO</p>\n          <button className=\"nav-link\" onClick={()=>setActivePage('home')}>Home</button>\n          <button className=\"nav-link\" onClick={()=>setActivePage('front-page')}>Analyze Sentiment</button>\n          <button className=\"nav-link\" onClick={()=>setActivePage('about')}>About</button>\n          <button className=\"nav-link\" onClick={()=>setActivePage('contact')}>Contact</button>\n      </div>\n      <hr />\n      <>\n      <div className='Quote-1'>\n      <h2>\"The true measure of a sentiment <br/>is not in the words themselves,<br/>\n      but in the emotions <br/>they evoke and the context they inhabit.\"</h2>\n    </div>\n      <table>\n        <tr>\n          <td><img className='emotions' src={user.image_url}/></td>\n          <td>\n            <center>\n            <div className=\"App\">\n              <h1 className=\"heading-1\" >Emo</h1>\n              <nav className=\"navbar\">\n\n              </nav>\n              {renderContent()} {/* Render the content based on the active page */}\n            </div>\n            </center>\n          </td>\n        </tr>\n      </table>\n      </>\n      \n    </center>\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}